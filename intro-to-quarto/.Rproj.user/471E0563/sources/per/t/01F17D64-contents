---
title: "Introduction to Quarto"
format: 
  html:
    toc: true
editor_options: 
  chunk_output_type: console
---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
1 + 1
```

You can add options to executable code like this:

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed).

## Inline Code

To include executable expressions within markdown, enclose the expression in `{r}` or `r`.

For example, we can use inline code to state the number of observations in `iris` data by using:

There are `r nrow(iris)` observations in `iris` data.

## Creating List and Sublist

To create a sublist in Quarto, you typically need to indent the sublist item by two to four spaces, but four spaces is the most widely supported and safest choice.

### Unordered List with Sublist

-   Fruits
    -   Apples
    -   Oranges
-   Vegetables
    -   Carrots
    -   Broccoli

### Ordered List with Sublist

1.  Preparation

    1.1. Gather materials\
    1.2. Set up environment

2.  Execution

    2.1. Run code\
    2.2. Save results

### Task List with Subtasks

-   [x] Install R
    -   [x] Download R
    -   [x] Install RStudio
-   [ ] Learn Markdown
    -   [ ] Basic formatting
    -   [ ] Lists and tables

## Creating and referencing Table

You can create tables in Quarto using standard Markdown syntax. At minimum, you need pipes (`|`) to separate columns and hyphens (`-`) under the header row:

| Column A | Column B |
|----------|----------|
| Row 1    | Data A   |
| Row 2    | Data B   |

### Captioned and cross-referenced tables

To add a caption and enable cross-references, wrap your table in a Div with an identifier and place the caption immediately after:

| Feature   | Description           |
|-----------|-----------------------|
| Feature 1 | Description of item 1 |
| Feature 2 | Description of item 2 |

: An example table demonstrating caption and cross-referencing in Quarto {#tbl-md .striped .hover}

You can reference this table elsewhere in your text by using its identifier:

> As shown in Table @tbl-md, each feature is described clearly.

### Column alignment

You can align column text by adding colons in the header separator row:

| Left    | Center  |   Right |
|:--------|:-------:|--------:|
| L-value | C-value | R-value |

This will left-align the first column, center-align the second, and right-align the third.


## Embedding and Referencing Figure

Quarto includes a number of features aimed at making it easier to work with figures and subfigures, as well as for laying out panels that contain multiple figures, tables, or other content.

### Embedded Images

In plain Markdown, a figure is created whenever a captioned image appears on its own line. For example:


![Elephant](images/elephant.png)


This will render with a given caption.

### Figure Sizing

By default, figures display at their intrinsic size (within page constraints). You can override this by adding width and height attributes directly:

![Elephant](images/elephant.png){width=300}

If only width is set, height is computed automatically. Units may be pixels (default), percentages, or conventional measures (e.g., inches or millimetres):

![Elephant- increasing the image width by 80%](images/elephant.png){width=80%}

<!--  
![Elephant](images/elephant.png){width=4in}
-->

### Linked Figures

To make a figure clickable while retaining caption behavior, wrap the image in a link:

[![Elephant](images/elephant.png)](https://en.wikipedia.org/wiki/Elephant)



### Figure Alignment

Figures are center-aligned by default. Use `fig-align` to change alignment:

![Elephant- aligned to the left](images/elephant.png){fig-align="left"}

Note that captions remain left-aligned to improve readability.

### Alternative Text

Include descriptive alt text for accessibility via `fig-alt`:

![](images/elephant.png){fig-alt="A drawing of an elephant."}

### Applying Multiple Parameters

Combine attributes by separating them with spaces:

![](images/elephant.png){fig-alt="A drawing of an elephant." fig-align="left" width=50%}


### Cross References

Assign an ID (with a `fig-` prefix) to enable cross-referencing:


![An Elephant](images/elephant.png){#fig-elephant}


Then refer to it in text:

> This is illustrated in @fig-elephant.

### Subfigures

Group multiple images into a composite figure using a Div with `layout-ncol`:

::: {#fig-elephants layout-ncol=2}

![Surus](images/surus.png){#fig-surus}

![Hanno](images/hanno.png){#fig-hanno}

Famous Elephants
:::

```{r}
#| label: some chunck

age = 14

age-8
```



### Computational Figures

Figures from executable code blocks inherit chunk options. Use `label`, `fig-cap`, and `fig-link` for IDs, captions, and links; and `fig-align`, `fig-alt`, `fig-width`, and `fig-height` for layout:

```{r}
#| label: fig-hist
#| fig-cap: "A histogram of random normals"
#| fig-alt: "Histogram of 100 random normal values"
#| fig-width: 6
#| fig-height: 4
hist(rnorm(100))
```

### Layout

You can also apply layout attributes to code-generated figures. For example, to place two plots side by side:

```{r}
#| layout-ncol: 2
#| fig-cap:
#|   - "Speed and Stopping Distances of Cars"
#|   - "Vapor Pressure of Mercury as a Function of Temperature"
plot(cars)
plot(pressure)
```

### Subcaptions

Combine `fig-cap` with `fig-subcap` to add subcaptions, and include `label` for cross-references:

```{r}
#| label: fig-charts
#| fig-cap: "Comparison Charts"
#| fig-subcap:
#|   - "Cars"
#|   - "Pressure"
#| layout-ncol: 2
#| echo: false
plot(cars)
plot(pressure)
```


## Equations

Quarto supports mathematical notation via Pandoc’s MathJax. You can include inline math with single dollar signs and display math with double dollar signs.

### Inline Math

To write inline math, wrap your expression in `$ ... $`, for example:

Euler’s identity is given by $e^{i\pi} + 1 = 0$.

### Display Math

For standalone equations, use `$$ ... $$`:

$$
\int_{a}^{b} x^2 \,dx = \frac{b^3 - a^3}{3}
$$

You can also label and reference display equations by wrapping them in a Div with an identifier.

**The Laplace transform of $f(t)$**:

$$
F(s) = \mathcal{L}\{f(t)\} = \int_{0}^{\infty} e^{-st} f(t) \,dt
$$ {#eq-sample}


Reference it using @eq-sample

## Callout Divs

Quarto supports several built‑in callout types to highlight important content. Use these callouts to draw attention to notes, tips, warnings, or important details:

### Note

::: callout-note
### For you!
This is a general note or additional information that complements the main text.
:::


Use **Note** callouts for supplemental context or background information that helps the reader but is not critical to the core narrative.

### Tip


::: callout-tip
This is a tip that offers a shortcut, best practice, or recommendation.
:::


Use **Tip** callouts to share practical advice, productivity hacks, or best practices relevant to the content.

### Warning

::: callout-warning
This is a warning about potential pitfalls or things to avoid.
:::


Use **Warning** callouts to alert readers to errors, common mistakes, or side effects that could cause problems if overlooked.

### Important


::: callout-important
This is an important piece of information or requirement.
:::


Use **Important** callouts for critical information, requirements, or steps that the reader must pay close attention to.


## Footnotes

Quarto supports traditional Markdown footnotes, allowing you to add supplementary details without disrupting the flow of your text. You write footnote references inline and define the footnote content elsewhere in the document.

### Inline Reference

Place a footnote marker in your text using `[^label]`. For example,


Here is a statement that needs extra detail[^1].


### Defining Footnotes

At the bottom of your document (or immediately after the paragraph), define the footnote content:


[^1]: This is the additional information provided as a footnote.

Footnote labels can be numeric or alphanumeric. They will render as superscript references and collect definitions in a footnote section.

### Multiple Footnotes

You can include as many footnotes as needed. For example:


First note[^a]. Second note[^b].

[^a]: Details for the first footnote.
[^b]: Details for the second footnote.

Footnotes enhance readability by keeping auxiliary information out of the main text while still making it accessible to readers.



